<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.5">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s' % (expInfo['participant'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': 'f&quot;sub_{randint(0, 9999):04.0f}&quot;'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="deg" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1728, 1117]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="diamond_search" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="PsychToolbox" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="fixation">
      <PolygonComponent name="fixcross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixcross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="deg" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="cue">
      <CodeComponent name="cue_init">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="theta = [60, 0, 300, 240, 180, 120];&amp;#10;arrow_ori = (- theta[(Cue_direction - 1)]);&amp;#10;if ((Validity === &quot;na&quot;)) {&amp;#10;    duration_fix = 0.5;&amp;#10;    duration_image = 0;&amp;#10;} else {&amp;#10;    duration_fix = 0;&amp;#10;    duration_image = 0.5;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# construct pointer&amp;#10;ip = randchoice([pos1, pos3, pos4, pos5, pos6]) # except salient distractor&amp;#10;# change line start, end&amp;#10;line.start = [0,0]&amp;#10;line.end = [CoordsX[ip]/3.0, CoordsY[ip]/3.0]&amp;#10;if cue_validity == 1: &amp;#10;    # point to distractor location&amp;#10;    line.end = [CoordsX[pos2]/3.0, CoordsY[pos2]/3.0]&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="cue_init" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="fix_disk">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.7000, 0.7000, 0.7000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1,-1,-1" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fix_disk" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="fixation_cross">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="black" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="black" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="fix_disk2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.7,0.7,0.7" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="0.7,0.7,0.7" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fix_disk2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="line">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="5" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="line" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="line" valType="str" updates="None" name="shape"/>
        <Param val="(2, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="search">
      <CodeComponent name="search_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# genearte trial sequences, &amp;#10;import pandas as pd&amp;#10;&amp;#10;n_trials = 120&amp;#10;block_trials = 30&amp;#10;num_block = n_trials//block_trials&amp;#10;&amp;#10;# there are 6 possible locations for the target and distractors, [0, 1,3,4] for target, [2,5] for distractors&amp;#10;# create an array of 120 rows with possible target locations&amp;#10;target_pos = np.array([randchoice([0,1,3,4], 1, replace=False) for i in range(n_trials)])&amp;#10;# create an array of 120 rows with possible distractor locations&amp;#10;distractor_pos = np.array([randchoice([2,5], 1, replace=False) for i in range(n_trials)])&amp;#10;# create any array of 120 rows, 5 columns with possible shapes for distractors, 3, 5, 6, 0 (triangle, pentagon, hexagon, circle)&amp;#10;distractor_shapes = np.array([randchoice([3,5,6,0], 5, replace=True) for i in range(n_trials)])&amp;#10;# create an array of 120 row with possible distractor presence (0,1)&amp;#10;singleton = np.array([randchoice([0,1], 1, replace=True) for i in range(n_trials)])&amp;#10;# create an array of 120 rows with possible target colors (0,1)&amp;#10;target_color = np.array([randchoice([0,1], 1, replace=True) for i in range(n_trials)])&amp;#10;# create correct answer 2D array of 120 rows, one column based on target_pos: &gt; 2 is 0, &lt; 2 is 1 (left, right) with one column&amp;#10;correct_answer = np.array([0 if i &gt; 2 else 1 for i in target_pos])&amp;#10;# convert correct_answer to 2D array&amp;#10;correct_answer = correct_answer.reshape(n_trials, 1)&amp;#10;&amp;#10;# concatenate all arrays into one array&amp;#10;sequences = np.concatenate((target_pos, distractor_pos, distractor_shapes, singleton, target_color, correct_answer), axis=1)&amp;#10;# convert sequences to pandas dataframe&amp;#10;sequences = pd.DataFrame(sequences, columns=['target_pos', 'distractor_pos', 'distractor_shape1', 'distractor_shape2', &amp;#10;                                             'distractor_shape3', 'distractor_shape4', 'distractor_shape5', &amp;#10;                                             'singleton', 'target_color', 'correct_answer'])&amp;#10;# change all columns to int&amp;#10;sequences = sequences.astype(int)&amp;#10;#save trials to csv file in subfolder sequences&amp;#10;seq_file = _thisDir + os.sep + u'data/%s_seq.csv' % (expInfo['participant'])&amp;#10;sequences.to_csv(seq_file, index=False)&amp;#10;&amp;#10;circle_rad = 6 # radius of circle (degrees)  were centered from the fixation&amp;#10;lw = 1 # item border line width (pixels)&amp;#10;dw = 3 # diamond width (degrees)&amp;#10;&amp;#10;col_Teal = [-0.7255,0.8902,0.8353]&amp;#10;col_orange = [1.000, 0.2491, -1.0000] &amp;#10;col_black = [-1, -1, -1] &amp;#10;&amp;#10;# create a 6 circular coordinates from 0 to 300 degrees with radius of circle_rad&amp;#10;CoordsX = [circle_rad*cos(t*pi/180) for t in range(-30, 271, 60)]&amp;#10;CoordsY = [circle_rad*sin(t*pi/180) for t in range(-30, 271, 60)]&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="theta = [60, 0, 300, 240, 180, 120];&amp;#10;circle_rad = 4;&amp;#10;lw = 1;&amp;#10;dw = 1.9;&amp;#10;ill = 1.5;&amp;#10;ilw = 0.3;&amp;#10;ilcol = &quot;black&quot;;&amp;#10;CoordsX = function () {&amp;#10;    var _pj_a = [], _pj_b = theta;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var t = _pj_b[_pj_c];&amp;#10;        _pj_a.push((circle_rad * Math.cos(((t * pi) / 180))));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;CoordsY = function () {&amp;#10;    var _pj_a = [], _pj_b = theta;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var t = _pj_b[_pj_c];&amp;#10;        _pj_a.push((circle_rad * Math.sin(((t * pi) / 180))));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;col_Teal = [(- 0.7255), 0.8902, 0.8353];&amp;#10;col_orange = [1.0, 0.2491, (- 1.0)];&amp;#10;col_black = [(- 1), (- 1), (- 1)];&amp;#10;ilcol = &quot;black&quot;;&amp;#10;DiamondTarget = new visual.Rect({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;DiamondTarget&quot;, &quot;width&quot;: [dw, dw][0], &quot;height&quot;: [dw, dw][1], &quot;ori&quot;: 45.0, &quot;pos&quot;: [0, 0], &quot;lineWidth&quot;: lw, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: null, &quot;fillColor&quot;: null, &quot;opacity&quot;: 1.0, &quot;depth&quot;: (- 3.0), &quot;interpolate&quot;: true});&amp;#10;HexagonDist = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(0, theta.length);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(new visual.Polygon({&quot;win&quot;: psychoJS.window, &quot;edges&quot;: 6, &quot;name&quot;: &quot;HexagonalDist&quot;, &quot;size&quot;: [dw, dw], &quot;ori&quot;: 0, &quot;pos&quot;: [CoordsX[i], CoordsY[i]], &quot;lineWidth&quot;: lw, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: null, &quot;fillColor&quot;: null, &quot;opacity&quot;: 1.0, &quot;depth&quot;: (- 3.0), &quot;interpolate&quot;: true}));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;TriangleDist = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(0, theta.length);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(new visual.Polygon({&quot;win&quot;: psychoJS.window, &quot;edges&quot;: 3, &quot;name&quot;: &quot;TriangleDist&quot;, &quot;size&quot;: [dw, dw], &quot;ori&quot;: 0, &quot;pos&quot;: [CoordsX[i], CoordsY[i]], &quot;lineWidth&quot;: lw, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: null, &quot;fillColor&quot;: null, &quot;opacity&quot;: 1.0, &quot;depth&quot;: (- 3.0), &quot;interpolate&quot;: true}));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;CircleDist = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(0, theta.length);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(new visual.ShapeStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;CircleDist&quot;, &quot;size&quot;: [((dw * 4) / pi), ((dw * 4) / pi)], &quot;vertices&quot;: &quot;circle&quot;, &quot;ori&quot;: 45.0, &quot;pos&quot;: [CoordsX[i], CoordsY[i]], &quot;lineWidth&quot;: lw, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: null, &quot;fillColor&quot;: null, &quot;opacity&quot;: 1.0, &quot;depth&quot;: (- 4.0), &quot;interpolate&quot;: true}));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;TargetLine = new visual.Rect({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;TargetLine&quot;, &quot;width&quot;: 0.3, &quot;height&quot;: 0.05, &quot;ori&quot;: 1.0, &quot;pos&quot;: [0, 0], &quot;lineWidth&quot;: 1, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: ilcol, &quot;fillColor&quot;: ilcol, &quot;opacity&quot;: 1, &quot;depth&quot;: (- 5.0), &quot;interpolate&quot;: true});&amp;#10;DistLine = new visual.Rect({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;DistLine&quot;, &quot;width&quot;: 0.3, &quot;height&quot;: 0.05, &quot;ori&quot;: 1.0, &quot;pos&quot;: [0, 0], &quot;lineWidth&quot;: 1, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: ilcol, &quot;fillColor&quot;: ilcol, &quot;opacity&quot;: 1, &quot;depth&quot;: (- 5.0), &quot;interpolate&quot;: true});&amp;#10;lines = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(0, theta.length);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(new visual.Rect({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;Line0&quot;, &quot;width&quot;: 0.3, &quot;height&quot;: 0.05, &quot;ori&quot;: 1.0, &quot;pos&quot;: [CoordsX[i], CoordsY[i]], &quot;lineWidth&quot;: 1.0, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: ilcol, &quot;fillColor&quot;: ilcol, &quot;opacity&quot;: 1.0, &quot;depth&quot;: (- 23.0), &quot;interpolate&quot;: true}));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# draw six shapes in the six circular coordinates&amp;#10;if target_color == 0:&amp;#10;    tar_col = col_Teal&amp;#10;    dis_col = col_orange&amp;#10;else:&amp;#10;    tar_col = col_orange&amp;#10;    dis_col = col_Teal&amp;#10;&amp;#10;if correct_answer == 0:&amp;#10;    corr_ans = 'left'&amp;#10;else:&amp;#10;    corr_ans = 'right'&amp;#10;    &amp;#10;items = [None]*6&amp;#10;&amp;#10;dis_count = 0&amp;#10;for i in range(6):&amp;#10;    # five distractor shapes&amp;#10;    shape = locals()[f'distractor_shape{dis_count+1}']&amp;#10;&amp;#10;    if i == target_pos: #Target - Diamond&amp;#10;        items[i]= visual.Polygon(win = win, edges = 4, size = dw,lineWidth = lw)&amp;#10;        items[i].fillColor = tar_col&amp;#10;    else: # distractor&amp;#10;        if shape == 0:&amp;#10;            items[i]= visual.Circle(win=win,radius= dw/2,edges = 128, lineWidth=lw)&amp;#10;        else:&amp;#10;            items[i]= visual.Polygon(win = win, edges = shape, size = dw,lineWidth = lw)&amp;#10;        if shape == 3: #triangle, increase the area a bit&amp;#10;            items[i].size = dw * 1.02&amp;#10;        if singleton == 1 and i == distractor_pos: # distractor singleton&amp;#10;            items[i].fillColor = dis_col&amp;#10;        else:&amp;#10;            items[i].fillColor = tar_col&amp;#10;        # increase distractor count&amp;#10;        dis_count = dis_count + 1&amp;#10;    items[i].name='position_' + str(i+1)&amp;#10;    items[i].setPos((CoordsX[i], CoordsY[i]))&amp;#10;    items[i].setAutoDraw(True)&amp;#10;&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="&amp;#10;for i in range(6):&amp;#10;    # pos1, pos2, pos3, pos4, pos5, pos6 are the six positions of the six shapes, let pos = pos$i&amp;#10;    position = locals()[f'pos{i+1}']&amp;#10;    shape = locals()[f'shape{i+1}']&amp;#10;&amp;#10;    if shape == 0:&amp;#10;        CircleItem.setPos((CoordsX[position], CoordsY[position]))&amp;#10;        if singleton == 1 and i == 1: # distractor singleton&amp;#10;            CircleItem.fillColor = dis_col&amp;#10;        else:&amp;#10;            CircleItem.fillColor = tar_col&amp;#10;        CircleItem.draw()&amp;#10;    else:&amp;#10;        PolyItem.setPos((CoordsX[position], CoordsY[position]))&amp;#10;        if singleton == 1 and i == 1: # distractor singleton&amp;#10;            PolyItem.fillColor = dis_col&amp;#10;        else:&amp;#10;            PolyItem.fillColor = tar_col&amp;#10;        PolyItem.edges = shape&amp;#10;        PolyItem.draw()&amp;#10;&amp;#10;# Draw lines inside the shapes&amp;#10;for i in range(6):&amp;#10;    LineItem.setPos((CoordsX[i], CoordsY[i]))&amp;#10;    if i==0:&amp;#10;        if target_orientation == 0:&amp;#10;            LineItem.ori = 0&amp;#10;        else:&amp;#10;            LineItem.ori = 90&amp;#10;    else:&amp;#10;        # random 0 or 90&amp;#10;        LineItem.ori = randchoice([0, 90])&amp;#10;    LineItem.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="TargetLine.setAutoDraw(false);&amp;#10;DistLine.setAutoDraw(false);&amp;#10;DiamondTarget.setAutoDraw(false);&amp;#10;for (var i, _pj_c = 0, _pj_a = util.range(0, theta.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    i = _pj_a[_pj_c];&amp;#10;    CircleDist[i].setAutoDraw(false);&amp;#10;    HexagonDist[i].setAutoDraw(false);&amp;#10;    TriangleDist[i].setAutoDraw(false);&amp;#10;    lines[i].setAutoDraw(false);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="for i in range(6):&amp;#10;    items[i].setAutoDraw(False)    &amp;#10;win.flip()&amp;#10;&amp;#10;if search_response.corr == 1:&amp;#10;    corr_trials = corr_trials +1&amp;#10;    " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="search_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="search_response">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corr_ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="search_response" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="block_break">
      <CodeComponent name="break_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="corr_trials = 0&amp;#10;block_break = False&amp;#10;key_dur = 1.0 + random()/2.0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="breaktext = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Break&quot;, &quot;units&quot;: &quot;height&quot;, &quot;height&quot;: 0.04});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((((trials.thisN + 1) % block_trials) === 0) &amp;&amp; ((trials.thisN + 1) &lt; n_trials))) {&amp;#10;    this_block = Number.parseInt(((trials.thisN + 1) / block_trials));&amp;#10;    breaktext.setText((((((&quot;Block &quot; + this_block.toString()) + &quot; finished\n&quot;) + (num_block - this_block).toString()) + &quot; blocks left\n&quot;) + &quot;Press a key to continue&quot;));&amp;#10;    breaktext.setAutoDraw(true);&amp;#10;    break_end = false;&amp;#10;} else {&amp;#10;    break_end = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ((trials.thisN+1) % block_trials == 0): &amp;#10;    block_break = True&amp;#10;    key_dur = 1800.0 # maximum 30 minutes&amp;#10;    this_block=int((trials.thisN+1)/block_trials)&amp;#10;    corr_rate = round(corr_trials/block_trials*100)&amp;#10;    btext = 'Block No. ' + str(this_block) + ' was finished.\n\n'&amp;#10;    btext = btext + 'There are ' + str(num_block-this_block) + ' left. \n\n' &amp;#10;    btext = btext + 'In the previous block, your correct rate was: \n\n' + str(corr_rate) + '%\n\n' &amp;#10;    btext = btext + 'Please keep your correct rate as high as possible. \n'&amp;#10;    btext = btext + 'If you are ready, press the SPACEBAR to continue ...'&amp;#10;    block_info.text = btext&amp;#10;    corr_trials=0&amp;#10;else:&amp;#10;    block_info.text = ''&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="breaktext.setAutoDraw(false);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="block_break = False&amp;#10;key_dur = 1.0 + random()/2.0&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="break_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_info">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_info" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$key_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Take a rest" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="40" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_block">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_block" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$key_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="finish">
      <TextComponent name="end">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The experiment is finished.&amp;#10;&amp;#10;Thank you for your participation!&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="deg" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="end_key">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="end_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <EyetrackerValidationRoutine name="validation">
      <Param name="borderColor" updates="None" val="black" valType="color"/>
      <Param name="borderWidth" updates="None" val="2" valType="num"/>
      <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
      <Param name="cursorFillColor" updates="None" val="green" valType="color"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="white" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="black" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="2" valType="num"/>
      <Param name="innerFillColor" updates="None" val="green" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.0035" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="validation" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.01" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="saveAsImg" updates="None" val="False" valType="bool"/>
      <Param name="showResults" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="NINE_POINTS" valType="str"/>
      <Param name="targetPositions" updates="None" val="NINE_POINTS" valType="list"/>
      <Param name="textColor" updates="None" val="auto" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerValidationRoutine>
    <Routine name="et_record_start">
      <EyetrackerRecordComponent name="etRecord">
        <Param val="Start Only" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
    </Routine>
    <Routine name="et_record_stop">
      <EyetrackerRecordComponent name="etRecord_2">
        <Param val="Stop Only" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
    </Routine>
    <EyetrackerCalibrationRoutine name="calibration">
      <Param name="borderColor" updates="None" val="white" valType="color"/>
      <Param name="borderWidth" updates="None" val="1" valType="num"/>
      <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="0.6549, 0.6549, 0.6549" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="white" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="1" valType="num"/>
      <Param name="innerFillColor" updates="None" val="green" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.14" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="calibration" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.35" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="NINE_POINTS" valType="str"/>
      <Param name="textColor" updates="None" val="white" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerCalibrationRoutine>
    <Routine name="Instruction_display">
      <ImageComponent name="image_instr1">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="display.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_instr1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(10, 9.4)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="text_intro">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_intro" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 6)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You will see a visual search display comprising six shapes on each trial. Sometimes, one shape may be a different color that you should ignore. &amp;#10;&amp;#10;Your task is to find if the diamond shape is on the right or left side.  &amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="deg" valType="str" updates="None" name="units"/>
        <Param val="40" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="space_key">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="space_key" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_cont2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_cont2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -6)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue ..." valType="str" updates="constant" name="text"/>
        <Param val="deg" valType="str" updates="None" name="units"/>
        <Param val="40" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Instruction_display"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$&quot;data/&quot;+expInfo['participant']+&quot;_seq.csv&quot;" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="search"/>
    <Routine name="block_break"/>
    <LoopTerminator name="trials"/>
    <Routine name="finish"/>
  </Flow>
</PsychoPy2experiment>
